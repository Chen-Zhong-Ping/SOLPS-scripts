#!/bin/bash

# Specially made to get D+ parallel velocity and Mach number data (to be plotted along field lines) at 5 different radial cell indices IY. by Chen 2017 June

# Only look at outboard target 4

# Modified so that each data file contains only values. The coordinates are the same so are stored in the connection length conn file from which I can get both the poloidal coordinates and the field line coordinates
# or in some cases use Te coordinates.

######################################################
##### Chen's file name modifier for analysis
######################################################

##### case name reader
# Need a file analysisCaseName in the run directory

if [ -a analysisCaseName ]; then

	CASENAMEFORANALYSIS=`awk '{print $1}' analysisCaseName`
	echo "case name is $CASENAMEFORANALYSIS"

else

	echo "Please provide an analysisCaseName file with the case name and run this script again."
	exit

fi


##### Creating directory to store data files

ANALYSIS="analysis"

if [ -d $ANALYSIS ]; then

	echo "Directory $ANALYSIS exists. Please rename or remove it and run this script again."
	exit

else

	mkdir $ANALYSIS
	cd $ANALYSIS
	mkdir Info           # subdirectory to store info files
	cd ..

fi

#######################################################



##########################################
######## mesh reader
##########################################


if [[ -z `which b2plot 2> /dev/null` ]] ; then echo "SOLPS b2plot path undefined. Source setup.ksh first." ; exit 1 ; fi

# ANALYSIS="analysis"                      # Name of directory where results are to be stored   # commented out by Chen
OUTFILE=b2pl.exe.dir/b2plot.write        # Name of file where formatted output is written by b2plot
OUTPLOT=b2plot.ps                        # Name of plot file written by b2plot
SUMMARY=summary.txt                      # Name of file where divertor summary data is written
FORMAT="sep vesl outl phys 1.3 rmin 1.6 rmax 1. zmin 1.3 zmax" # 1. rmin 1.5 rmax -1.4 zmin -.9 zmax

POWERCALC="powercalc"
if [[ -n `which b2graphs 2> /dev/null` ]] ; then       # Look for directory where b2graphs (and POWERCALC)
   BINDIR=`dirname $(which b2graphs)`                  # is stored in case a radiation load analysis is
elif [[ -L b2graphs ]] ; then                          # desired
   BINDIR=`dirname $(readlink b2graphs)`
elif [[ -f b2graphs ]] ; then
   BINDIR="."
else
   echo "   WARNING: Binary directory is undefined because b2graphs cannot"
   echo "   be found. $POWERCALC cannot be run."
fi

# [[ -d $ANALYSIS ]] && rm -rf $ANALYSIS # commented out by Chen
# mkdir $ANALYSIS # commented out by Chen


##### Find mesh file name in b2ag.dat #####

echo "Looking for .SNO-format mesh file ..."

[[ -e ../baserun/b2ag.dat ]] && MESH_FILE="../baserun/$(grep -m 1 "b2agfs_geometry" ../baserun/b2ag.dat | awk -F\' '{print $4}')"
[[ -e b2ag.dat ]] && MESH_FILE=`grep -m 1 "b2agfs_geometry" b2ag.dat | awk -F\' '{print $4}'`

[[ $MESH_FILE != *.sno ]] && echo "No .SNO-format mesh file specified in b2ag.dat. Looking in current directory ..." && MESH_FILE=`ls *.sno`
[[ $MESH_FILE != *.sno ]] && echo "No .SNO-format mesh file found. Script cannot run." && exit 1

echo "Mesh file identified as $MESH_FILE"


##### Read parameters from mesh file #####

echo "Reading mesh file ..."

NX=`grep -m 1 "nx" $MESH_FILE | awk '{print $3}'`
NY=`grep -m 1 "ny" $MESH_FILE | awk '{print $3}'`
NCUT=`grep -m 1 "ncut" $MESH_FILE | awk '{print $3}'`
NYCUT=`grep -m 1 "nycut" $MESH_FILE | awk '{print $3}'`    # It is the cell index next to the separatrix, outside

if [[ $NCUT = 2 ]]      # single-nulls
then
   NXCUT[1]=`grep -m 1 "nxcut" $MESH_FILE | awk '{print $3}'`
   NXCUT[4]=`grep -m 1 "nxcut" $MESH_FILE | awk '{print $4}'`
elif [[ $NCUT = 4 ]]    # double-nulls
then
   NISO=`grep -m 1 "niso" $MESH_FILE | awk '{print $3}'`
   NXISO=`grep -m 1 "nxiso" $MESH_FILE | awk '{print $3}'`

   NXCUT[1]=`grep -m 1 "nxcut" $MESH_FILE | awk '{print $3}'`
   NXCUT[2]=`grep -m 1 "nxcut" $MESH_FILE | awk '{print $4}'`
   NXCUT[3]=`grep -m 1 "nxcut" $MESH_FILE | awk '{print $5}'`
   NXCUT[4]=`grep -m 1 "nxcut" $MESH_FILE | awk '{print $6}'`
fi

###### FREQUENTLY USED VARIABLES AND FUNCTIONS #####

# B2 cell indices for target/divertor profiles at cell centers (scalars)

TARG_CELL[1]=0                   # Cell index for Target 1
TARG_CELL[2]=$((NXISO-2))        # Cell index for Target 2 (double-null only)
TARG_CELL[3]=$((NXISO+1))        # Cell index for Target 3 (double-null only)
TARG_CELL[4]=$((NX))             # Cell index for Target 4   ######################  modified by Chen to go to the boundary cell at target 4  ########
XPT_CELL[1]=$((NXCUT[1]-1))      # Cell index for Divertor 1 entrance
XPT_CELL[2]=${NXCUT[2]}          # Cell index for Divertor 2 entrance (double-null only)
XPT_CELL[3]=$((NXCUT[3]-1))      # Cell index for Divertor 3 entrance (double-null only)
XPT_CELL[4]=${NXCUT[4]}          # Cell index for Divertor 4 entrance

INC() {                    # This function determines which way to increment the cell index
   echo "-1^$N" | bc       # when making poloidal profiles, depending on the divertor leg, so
}                          # that all profiles are written from upstream to downstream

ABS() {                          # Absolute value function
   if [[ `echo "$1 < 0.0" | bc -l` = 1 ]] ; then
      echo `echo "-1*$1" | bc -l`
   else
      echo $1
   fi
}

######################################################
######################################################





######################################################
########## D+ Uparallel and Mach number poloidal profiles
########## extracting data for  poloidal profiles


	for N in `seq 1 4`; do   ### BEGIN LOOP THROUGH DIVERTOR LEGS ###
	[[ "$NCUT" = 2 && ("$N" = 2 || "$N" = 3) ]] && continue    # Skip extra legs for single-nulls


		if [[ $N = 4 ]]; then    # Only look at outboard target 4

		for iY in `seq 0 4`; do     # look at different radial cell indices

			IY=$(($NYCUT+$iY))
		
			# D+ ion parallel velocity. use zsel to select a specific species index. in this case D+ has index 1, or can try ismain (not confirmed by Chen)
			echo "ua 1 zsel $IY writ f.x" | b2plot >& /dev/null

			echo "Poloical profile of D+ ion parallel velocity (@ cell center)" >> $ANALYSIS/Info/$CASENAMEFORANALYSIS-UparaDIon_fx$N-IY$IY-info.txt
			echo "Units: m/s" >> $ANALYSIS/Info/$CASENAMEFORANALYSIS-UparaDIon_fx$N-IY$IY-info.txt
			echo "IY = $IY" >> $ANALYSIS/Info/$CASENAMEFORANALYSIS-UparaDIon_fx$N-IY$IY-info.txt
			echo "Boundary(sheath) cell INCLUDED" >> $ANALYSIS/Info/$CASENAMEFORANALYSIS-UparaDIon_fx$N-IY$IY-info.txt

			for i in `seq $((XPT_CELL[N]+3)) $(INC) $((TARG_CELL[N]+3))`; do      # Read poloidal profile
				echo `awk -v var=$i 'NR==var{print $2}' $OUTFILE` >> $ANALYSIS/$CASENAMEFORANALYSIS-UparaDIon_fx$N-IY$IY.txt   # write only values, coordinates will get from connection length conn file
			done

			# D+ mach number. use zsel to select a specific species index. in this case D+ has index 1, or can try ismain (not confirmed by Chen)
			echo "mach 1 zsel $IY writ f.x" | b2plot >& /dev/null

			echo "Poloical profile of D+ Mach number (@ cell center)" >> $ANALYSIS/Info/$CASENAMEFORANALYSIS-MachDIon_fx$N-IY$IY-info.txt
			echo "Units: 1" >> $ANALYSIS/Info/$CASENAMEFORANALYSIS-MachDIon_fx$N-IY$IY-info.txt
			echo "IY = $IY" >> $ANALYSIS/Info/$CASENAMEFORANALYSIS-MachDIon_fx$N-IY$IY-info.txt
			echo "Boundary(sheath) cell INCLUDED" >> $ANALYSIS/Info/$CASENAMEFORANALYSIS-MachDIon_fx$N-IY$IY-info.txt

			for i in `seq $((XPT_CELL[N]+3)) $(INC) $((TARG_CELL[N]+3))`; do      # Read poloidal profile
				echo `awk -v var=$i 'NR==var{print $2}' $OUTFILE` >> $ANALYSIS/$CASENAMEFORANALYSIS-MachDIon_fx$N-IY$IY.txt   # write only values, coordinates will get from connection length conn file
			done


		done	# end loop through different radial cell indices

		fi

	done   ### END LOOP THROUGH DIVERTOR LEGS ###


####
